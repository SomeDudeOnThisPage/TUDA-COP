package ExerciseLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.runtime.ConstraintFunction;
import jetbrains.mps.smodel.runtime.ConstraintContext_DefaultScopeProvider;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.runtime.CheckingNodeContext;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class SelfReferenceExpression_Constraints extends BaseConstraintsDescriptor {
  public SelfReferenceExpression_Constraints() {
    super(CONCEPTS.SelfReferenceExpression$iv);
  }

  @Override
  public ConstraintFunction<ConstraintContext_DefaultScopeProvider, ReferenceScopeProvider> calculateDefaultScopeConstraint() {
    return new ConstraintFunction<ConstraintContext_DefaultScopeProvider, ReferenceScopeProvider>() {
      @Nullable
      public ReferenceScopeProvider invoke(@NotNull ConstraintContext_DefaultScopeProvider context, @Nullable CheckingNodeContext checkingNodeContext) {
        return ReferenceScopeProvider.fromHierarchy(CONCEPTS.ClassConcept$S3, new SNodePointer("r:cdccb337-955c-47f5-9e0b-861587339752(ExerciseLanguage.constraints)", "8163210767088753460"));
      }
    };
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept SelfReferenceExpression$iv = MetaAdapterFactory.getConcept(0x97a51900650f4519L, 0xa79289e9b2b161cbL, 0x71498cf12ef81aeaL, "ExerciseLanguage.structure.SelfReferenceExpression");
    /*package*/ static final SConcept ClassConcept$S3 = MetaAdapterFactory.getConcept(0x97a51900650f4519L, 0xa79289e9b2b161cbL, 0x39275cb10e6e1429L, "ExerciseLanguage.structure.ClassConcept");
  }
}
