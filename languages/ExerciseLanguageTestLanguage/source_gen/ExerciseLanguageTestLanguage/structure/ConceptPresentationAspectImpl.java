package ExerciseLanguageTestLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_AssertBoolean;
  private ConceptPresentation props_AssertInteger;
  private ConceptPresentation props_IAssert;
  private ConceptPresentation props_Test;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.AssertBoolean:
        if (props_AssertBoolean == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("bool");
          props_AssertBoolean = cpb.create();
        }
        return props_AssertBoolean;
      case LanguageConceptSwitch.AssertInteger:
        if (props_AssertInteger == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("int");
          props_AssertInteger = cpb.create();
        }
        return props_AssertInteger;
      case LanguageConceptSwitch.IAssert:
        if (props_IAssert == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_IAssert = cpb.create();
        }
        return props_IAssert;
      case LanguageConceptSwitch.Test:
        if (props_Test == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Test = cpb.create();
        }
        return props_Test;
    }
    return null;
  }
}
